// <auto-generated />
using System;
using Aciktim.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aciktim.Migrations
{
    [DbContext(typeof(AciktimContext))]
    partial class AciktimContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Aciktim.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"), 1L, 1);

                    b.Property<string>("AddressName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<int>("ApartmentNumberId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("NeighbourhoodId")
                        .HasColumnType("int");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int>("StreetId")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("ApartmentNumberId");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("NeighbourhoodId");

                    b.HasIndex("StateId");

                    b.HasIndex("StreetId");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Apartment", b =>
                {
                    b.Property<int>("ApartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApartmentId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StreetId")
                        .HasColumnType("int");

                    b.HasKey("ApartmentId");

                    b.HasIndex("StreetId");

                    b.ToTable("Apartment", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.ApartmentNumber", b =>
                {
                    b.Property<int>("ApartmentNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApartmentNumberId"), 1L, 1);

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ApartmentNumberId");

                    b.HasIndex("ApartmentId");

                    b.ToTable("ApartmentNumber", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Basket", b =>
                {
                    b.Property<int>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BasketId"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("BasketId");

                    b.HasIndex("ClientId");

                    b.ToTable("Basket", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.BasketProduct", b =>
                {
                    b.Property<int>("Bpid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BPId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bpid"), 1L, 1);

                    b.Property<int>("BasketId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Bpid")
                        .HasName("PK__tmp_ms_x__3876B6ACED5DA249");

                    b.HasIndex("BasketId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketProduct", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"), 1L, 1);

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("CVV");

                    b.Property<DateTime>("ExprationDate")
                        .HasColumnType("date");

                    b.HasKey("CardId");

                    b.HasIndex("ClientId");

                    b.HasIndex(new[] { "CardNumber" }, "UQ__Card__A4E9FFE9C7A77318")
                        .IsUnique();

                    b.ToTable("Card", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Carrier", b =>
                {
                    b.Property<int>("CarrierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarrierId"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("CarrierName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("E-mail");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("CarrierId");

                    b.HasIndex("AddressId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Phone" }, "UQ__Carrier__5C7E359EBFDB7F0F")
                        .IsUnique();

                    b.HasIndex(new[] { "CarrierName" }, "UQ__Carrier__B14565B072E6DB3C")
                        .IsUnique();

                    b.ToTable("Carrier", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.CarrierRestaurant", b =>
                {
                    b.Property<int>("Crid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CRId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Crid"), 1L, 1);

                    b.Property<int>("CarrierId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Crid")
                        .HasName("PK__tmp_ms_x__F2363F32A8221D6E");

                    b.HasIndex("CarrierId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("CarrierRestaurant", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"), 1L, 1);

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("E-mail");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("ClientId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Phone" }, "UQ__Client__5C7E359E02B08A7B")
                        .IsUnique();

                    b.HasIndex(new[] { "ClientName" }, "UQ__Client__65800DA0E53930E6")
                        .IsUnique();

                    b.HasIndex(new[] { "EMail" }, "UQ__Client__E720A1C3E0A01326")
                        .IsUnique();

                    b.HasIndex(new[] { "EMail" }, "UQ__Table__E720A1C35FD1595E")
                        .IsUnique();

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.ClientAddress", b =>
                {
                    b.Property<int>("Caid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CAId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Caid"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("Caid")
                        .HasName("PK__ClientAd__A8D21E5638D82C81");

                    b.HasIndex("AddressId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientAddress", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.ClientFavorite", b =>
                {
                    b.Property<int>("FavoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriteId"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("FavoriteId")
                        .HasName("PK__ClientFa__CE74FAD5AE5101DD");

                    b.HasIndex("ClientId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("ClientFavorite", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentId");

                    b.HasIndex("ClientId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CountryId");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"), 1L, 1);

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("date");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.HasKey("DiscountId");

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.GetAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"), 1L, 1);

                    b.Property<string>("AddressName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighbourhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("FullAddress");
                });

            modelBuilder.Entity("Aciktim.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"), 1L, 1);

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ImageId");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"), 1L, 1);

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tcno")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("TCNo");

                    b.HasKey("ManagerId");

                    b.ToTable("Manager", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"), 1L, 1);

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("MenuId");

                    b.HasIndex("ImageId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Neighbourhood", b =>
                {
                    b.Property<int>("NeighbourhoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NeighbourhoodId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("NeighbourhoodId");

                    b.HasIndex("StateId");

                    b.ToTable("Neighbourhood", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("AddressId");

                    b.HasIndex("ClientId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.OrderProduct", b =>
                {
                    b.Property<int>("Opid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OPId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Opid"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Opid")
                        .HasName("PK__OrderPro__AE2CBEFEB17174C9");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ImageId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.ProductCategory", b =>
                {
                    b.Property<int>("Pcid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PCId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pcid"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Pcid")
                        .HasName("PK__tmp_ms_x__580221DF8627D9FD");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategory", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.ProductMenu", b =>
                {
                    b.Property<int>("Pmid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PMId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pmid"), 1L, 1);

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Pmid")
                        .HasName("PK__ProductM__5C86FF463A7FE2FB");

                    b.HasIndex("MenuId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductMenu", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("E-mail");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RestaurantId");

                    b.HasIndex("AddressId");

                    b.HasIndex("ImageId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Restaurant", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StateId");

                    b.HasIndex("CityId");

                    b.ToTable("State", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Street", b =>
                {
                    b.Property<int>("StreetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StreetId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NeighbourhoodId")
                        .HasColumnType("int");

                    b.HasKey("StreetId");

                    b.HasIndex("NeighbourhoodId");

                    b.ToTable("Street", (string)null);
                });

            modelBuilder.Entity("Aciktim.Models.Address", b =>
                {
                    b.HasOne("Aciktim.Models.Apartment", "Apartment")
                        .WithMany("Addresses")
                        .HasForeignKey("ApartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Address__Apartme__41EDCAC5");

                    b.HasOne("Aciktim.Models.ApartmentNumber", "ApartmentNumber")
                        .WithMany("Addresses")
                        .HasForeignKey("ApartmentNumberId")
                        .IsRequired()
                        .HasConstraintName("FK__Address__Apartme__42E1EEFE");

                    b.HasOne("Aciktim.Models.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__Address__CityId__3F115E1A");

                    b.HasOne("Aciktim.Models.Country", "Country")
                        .WithMany("Addresses")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__Address__Country__3E1D39E1");

                    b.HasOne("Aciktim.Models.Neighbourhood", "Neighbourhood")
                        .WithMany("Addresses")
                        .HasForeignKey("NeighbourhoodId")
                        .IsRequired()
                        .HasConstraintName("FK__Address__Neighbo__40F9A68C");

                    b.HasOne("Aciktim.Models.State", "State")
                        .WithMany("Addresses")
                        .HasForeignKey("StateId")
                        .IsRequired()
                        .HasConstraintName("FK__Address__StateId__498EEC8D");

                    b.HasOne("Aciktim.Models.Street", "Street")
                        .WithMany("Addresses")
                        .HasForeignKey("StreetId")
                        .IsRequired()
                        .HasConstraintName("FK__Address__StreetI__40058253");

                    b.Navigation("Apartment");

                    b.Navigation("ApartmentNumber");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Neighbourhood");

                    b.Navigation("State");

                    b.Navigation("Street");
                });

            modelBuilder.Entity("Aciktim.Models.Apartment", b =>
                {
                    b.HasOne("Aciktim.Models.Street", "Street")
                        .WithMany("Apartments")
                        .HasForeignKey("StreetId")
                        .IsRequired()
                        .HasConstraintName("FK__Apartment__Stree__5EBF139D");

                    b.Navigation("Street");
                });

            modelBuilder.Entity("Aciktim.Models.ApartmentNumber", b =>
                {
                    b.HasOne("Aciktim.Models.Apartment", "Apartment")
                        .WithMany("ApartmentNumbers")
                        .HasForeignKey("ApartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Apartment__Apart__619B8048");

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("Aciktim.Models.Basket", b =>
                {
                    b.HasOne("Aciktim.Models.Client", "Client")
                        .WithMany("Baskets")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Basket__ClientId__60A75C0F");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Aciktim.Models.BasketProduct", b =>
                {
                    b.HasOne("Aciktim.Models.Basket", "Basket")
                        .WithMany("BasketProducts")
                        .HasForeignKey("BasketId")
                        .IsRequired()
                        .HasConstraintName("FK__BasketPro__Baske__17036CC0");

                    b.HasOne("Aciktim.Models.Product", "Product")
                        .WithMany("BasketProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__BasketPro__Produ__17F790F9");

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Aciktim.Models.Card", b =>
                {
                    b.HasOne("Aciktim.Models.Client", "Client")
                        .WithMany("Cards")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Card__ClientId__6477ECF3");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Aciktim.Models.Carrier", b =>
                {
                    b.HasOne("Aciktim.Models.Address", "Address")
                        .WithMany("Carriers")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("FK__Carrier__Address__45BE5BA9");

                    b.HasOne("Aciktim.Models.Role", "Role")
                        .WithMany("Carriers")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Carrier__RoleId__14270015");

                    b.Navigation("Address");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Aciktim.Models.CarrierRestaurant", b =>
                {
                    b.HasOne("Aciktim.Models.Carrier", "Carrier")
                        .WithMany("CarrierRestaurants")
                        .HasForeignKey("CarrierId")
                        .IsRequired()
                        .HasConstraintName("FK__CarrierRe__Carri__1AD3FDA4");

                    b.HasOne("Aciktim.Models.Restaurant", "Restaurant")
                        .WithMany("CarrierRestaurants")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK__CarrierRe__Resta__1BC821DD");

                    b.Navigation("Carrier");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Aciktim.Models.City", b =>
                {
                    b.HasOne("Aciktim.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__City__CountryId__6E01572D");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Aciktim.Models.Client", b =>
                {
                    b.HasOne("Aciktim.Models.Role", "Role")
                        .WithMany("Clients")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Client__RoleID__71D1E811");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Aciktim.Models.ClientAddress", b =>
                {
                    b.HasOne("Aciktim.Models.Address", "Address")
                        .WithMany("ClientAddresses")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("FK__ClientAdd__Addre__46B27FE2");

                    b.HasOne("Aciktim.Models.Client", "Client")
                        .WithMany("ClientAddresses")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__ClientAdd__Clien__73BA3083");

                    b.Navigation("Address");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Aciktim.Models.ClientFavorite", b =>
                {
                    b.HasOne("Aciktim.Models.Client", "Client")
                        .WithMany("ClientFavorites")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__ClientFav__Clien__74AE54BC");

                    b.HasOne("Aciktim.Models.Restaurant", "Restaurant")
                        .WithMany("ClientFavorites")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK__ClientFav__Resta__75A278F5");

                    b.Navigation("Client");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Aciktim.Models.Comment", b =>
                {
                    b.HasOne("Aciktim.Models.Client", "Client")
                        .WithMany("Comments")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Comment__ClientI__76969D2E");

                    b.HasOne("Aciktim.Models.Restaurant", "Restaurant")
                        .WithMany("Comments")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK__Comment__Restaur__778AC167");

                    b.Navigation("Client");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Aciktim.Models.Menu", b =>
                {
                    b.HasOne("Aciktim.Models.Image", "Image")
                        .WithMany("Menus")
                        .HasForeignKey("ImageId")
                        .HasConstraintName("FK__Menu__ImageId__2BFE89A6");

                    b.HasOne("Aciktim.Models.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK__Menu__Restaurant__787EE5A0");

                    b.Navigation("Image");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Aciktim.Models.Neighbourhood", b =>
                {
                    b.HasOne("Aciktim.Models.State", "State")
                        .WithMany("Neighbourhoods")
                        .HasForeignKey("StateId")
                        .IsRequired()
                        .HasConstraintName("FK__Neighbour__State__797309D9");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Aciktim.Models.Order", b =>
                {
                    b.HasOne("Aciktim.Models.Address", "Address")
                        .WithMany("Orders")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("FK__Order__AddressId__43D61337");

                    b.HasOne("Aciktim.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Order__ClientId__7A672E12");

                    b.Navigation("Address");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Aciktim.Models.OrderProduct", b =>
                {
                    b.HasOne("Aciktim.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderProd__Order__7C4F7684");

                    b.HasOne("Aciktim.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderProd__Produ__7D439ABD");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Aciktim.Models.Product", b =>
                {
                    b.HasOne("Aciktim.Models.Discount", "Discount")
                        .WithMany("Products")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK__Product__Discoun__2B0A656D");

                    b.HasOne("Aciktim.Models.Image", "Image")
                        .WithMany("Products")
                        .HasForeignKey("ImageId")
                        .HasConstraintName("FK__Product__ImageId__2A164134");

                    b.HasOne("Aciktim.Models.Restaurant", "Restaurant")
                        .WithMany("Products")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK__Product__Restaur__7E37BEF6");

                    b.Navigation("Discount");

                    b.Navigation("Image");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Aciktim.Models.ProductCategory", b =>
                {
                    b.HasOne("Aciktim.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductCa__Categ__1EA48E88");

                    b.HasOne("Aciktim.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductCa__Produ__1F98B2C1");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Aciktim.Models.ProductMenu", b =>
                {
                    b.HasOne("Aciktim.Models.Menu", "Menu")
                        .WithMany("ProductMenus")
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductMe__MenuI__02084FDA");

                    b.HasOne("Aciktim.Models.Product", "Product")
                        .WithMany("ProductMenus")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductMe__Produ__01142BA1");

                    b.Navigation("Menu");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Aciktim.Models.Restaurant", b =>
                {
                    b.HasOne("Aciktim.Models.Address", "Address")
                        .WithMany("Restaurants")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("FK__Restauran__Addre__44CA3770");

                    b.HasOne("Aciktim.Models.Image", "Image")
                        .WithMany("Restaurants")
                        .HasForeignKey("ImageId")
                        .HasConstraintName("FK__Restauran__Image__29221CFB");

                    b.HasOne("Aciktim.Models.Manager", "Manager")
                        .WithMany("Restaurants")
                        .HasForeignKey("ManagerId")
                        .IsRequired()
                        .HasConstraintName("FK__Restauran__Manag__03F0984C");

                    b.Navigation("Address");

                    b.Navigation("Image");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Aciktim.Models.State", b =>
                {
                    b.HasOne("Aciktim.Models.City", "City")
                        .WithMany("States")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__State__CityId__04E4BC85");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Aciktim.Models.Street", b =>
                {
                    b.HasOne("Aciktim.Models.Neighbourhood", "Neighbourhood")
                        .WithMany("Streets")
                        .HasForeignKey("NeighbourhoodId")
                        .IsRequired()
                        .HasConstraintName("FK__Street__Neighbou__05D8E0BE");

                    b.Navigation("Neighbourhood");
                });

            modelBuilder.Entity("Aciktim.Models.Address", b =>
                {
                    b.Navigation("Carriers");

                    b.Navigation("ClientAddresses");

                    b.Navigation("Orders");

                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Aciktim.Models.Apartment", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("ApartmentNumbers");
                });

            modelBuilder.Entity("Aciktim.Models.ApartmentNumber", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Aciktim.Models.Basket", b =>
                {
                    b.Navigation("BasketProducts");
                });

            modelBuilder.Entity("Aciktim.Models.Carrier", b =>
                {
                    b.Navigation("CarrierRestaurants");
                });

            modelBuilder.Entity("Aciktim.Models.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("Aciktim.Models.City", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("States");
                });

            modelBuilder.Entity("Aciktim.Models.Client", b =>
                {
                    b.Navigation("Baskets");

                    b.Navigation("Cards");

                    b.Navigation("ClientAddresses");

                    b.Navigation("ClientFavorites");

                    b.Navigation("Comments");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Aciktim.Models.Country", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Aciktim.Models.Discount", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Aciktim.Models.Image", b =>
                {
                    b.Navigation("Menus");

                    b.Navigation("Products");

                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Aciktim.Models.Manager", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Aciktim.Models.Menu", b =>
                {
                    b.Navigation("ProductMenus");
                });

            modelBuilder.Entity("Aciktim.Models.Neighbourhood", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Streets");
                });

            modelBuilder.Entity("Aciktim.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Aciktim.Models.Product", b =>
                {
                    b.Navigation("BasketProducts");

                    b.Navigation("OrderProducts");

                    b.Navigation("ProductCategories");

                    b.Navigation("ProductMenus");
                });

            modelBuilder.Entity("Aciktim.Models.Restaurant", b =>
                {
                    b.Navigation("CarrierRestaurants");

                    b.Navigation("ClientFavorites");

                    b.Navigation("Comments");

                    b.Navigation("Menus");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Aciktim.Models.Role", b =>
                {
                    b.Navigation("Carriers");

                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Aciktim.Models.State", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Neighbourhoods");
                });

            modelBuilder.Entity("Aciktim.Models.Street", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Apartments");
                });
#pragma warning restore 612, 618
        }
    }
}
